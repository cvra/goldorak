<?xml version="1.0"?>
<robot name="goldorak" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="body_radius" value="0.11" />
  <xacro:property name="body_height" value="0.35" />
  <xacro:property name="wheelbase" value="0.194" />
  <xacro:property name="wheel_radius" value="0.029" />
  <xacro:property name="wheel_thickness" value="0.01" />
  <xacro:property name="casterbase" value="0.194" />
  <xacro:property name="caster_radius" value="0.01" />
  <xacro:property name="beacon_radius" value="0.04" />
  <xacro:property name="beacon_height" value="0.08" />
  <xacro:property name="beacon_offset" value="${body_height + beacon_height / 2}" />
  <xacro:property name="pi" value="3.1415" />

  <material name="blue">
    <color rgba="0 0 .8 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0" />
    </inertial>
  </xacro:macro>

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0.175" />
      <geometry>
        <cylinder radius="${body_radius}" length="${body_height}"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin xyz="0 0 0.175" />
      <geometry>
        <cylinder radius="${body_radius}" length="${body_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.01" ixy="0.0" ixz="0.0"
               iyy="0.01" iyz="0.0"
               izz="0.5" />
    </inertial>
  </link>

  <!-- Wheel link xacro -->
  <xacro:macro name="wheel" params="prefix reflect">

    <link name="${prefix}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
        <material name="black"/>
        <origin xyz="0 0 0" rpy="0 0 0" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0" />
      </collision>
      <inertial>
          <origin xyz="0 0 0"/>
          <mass value="0.01" />
          <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                   iyy="0.001" iyz="0.0"
                   izz="0.001" />
        </inertial>
    </link>
    <joint name="${prefix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="0
                   ${(wheelbase + wheel_thickness) * reflect / 2}
                   0"
              rpy="0 0 0"/>
    </joint>

    <!-- This block provides the simulator (Gazebo) with information on a few additional
    physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
    <gazebo reference="${prefix}_wheel">
      <mu1>1.0</mu1>
      <mu2>1.0</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <material>Gazebo/Grey</material>
    </gazebo>

    <!-- This block connects the wheel joint to an actuator (motor), which informs both
    simulation and visualization of the robot -->
    <transmission name="${prefix}_wheel_trans" type="SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_wheel_joint">
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

  </xacro:macro>

  <xacro:wheel prefix="right" reflect="-1"/>
  <xacro:wheel prefix="left" reflect="1"/>

  <xacro:macro name="caster" params="prefix reflect">

    <link name="${prefix}_caster">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <sphere radius="${caster_radius}" />
        </geometry>
        <material name="black"/>
        <origin xyz="0 0 0" rpy="0 0 0" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <sphere radius="${caster_radius}" />
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0" />
      </collision>
      <inertial>
        <origin xyz="0 0 0" />
        <mass value="0.01" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
        </inertial>
    </link>
    <joint name="${prefix}_caster_joint" type="fixed">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_caster"/>
      <origin xyz="${(casterbase + caster_radius) * reflect / 2}
                   0
                   ${- caster_radius}"
              rpy="0 0 0"/>
    </joint>

    <gazebo reference="${prefix}_caster">
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>1.0</maxVel>
      <material>Gazebo/Grey</material>
    </gazebo>

  </xacro:macro>

  <xacro:caster prefix="front" reflect="1"/>
  <xacro:caster prefix="rear" reflect="-1"/>

  <!-- Beacon link -->
  <joint name="beacon_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 ${beacon_offset}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="beacon_link"/>
  </joint>

  <link name="beacon_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${beacon_radius}" length="${beacon_height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${beacon_radius}" length="${beacon_height}"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0"
               iyy="1e-6" iyz="0"
               izz="1e-6" />
    </inertial>
  </link>

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>

  <!-- Gazebo plugin for Laser scanner -->
<!--   <gazebo reference="laser_link">
    <sensor type="ray" name="laser_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_laser.so">
        <topicName>/laser/scan</topicName>
        <frameName>laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo> -->
</robot>
